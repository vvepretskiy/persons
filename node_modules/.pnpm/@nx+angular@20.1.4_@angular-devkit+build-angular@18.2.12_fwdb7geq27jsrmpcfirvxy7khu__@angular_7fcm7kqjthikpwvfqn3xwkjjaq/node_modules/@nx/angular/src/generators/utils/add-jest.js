"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addJest = addJest;
const devkit_1 = require("@nx/devkit");
const versions_1 = require("../../utils/versions");
async function addJest(tree, options) {
    if (!options.skipPackageJson) {
        process.env.npm_config_legacy_peer_deps ??= 'true';
        (0, devkit_1.addDependenciesToPackageJson)(tree, {}, { 'jest-preset-angular': versions_1.jestPresetAngularVersion }, undefined, true);
    }
    const { configurationGenerator } = (0, devkit_1.ensurePackage)('@nx/jest', versions_1.nxVersion);
    await configurationGenerator(tree, {
        project: options.name,
        setupFile: 'angular',
        supportTsx: false,
        skipSerializers: false,
        skipPackageJson: options.skipPackageJson,
        skipFormat: true,
        addPlugin: false,
        addExplicitTargets: true,
    });
    const setupFile = (0, devkit_1.joinPathFragments)(options.projectRoot, 'src', 'test-setup.ts');
    if (options.strict && tree.exists(setupFile)) {
        const contents = tree.read(setupFile, 'utf-8');
        tree.write(setupFile, `// @ts-expect-error https://thymikee.github.io/jest-preset-angular/docs/getting-started/test-environment
globalThis.ngJest = {
  testEnvironmentOptions: {
    errorOnUnknownElements: true,
    errorOnUnknownProperties: true,
  },
};
${contents}`);
    }
}
