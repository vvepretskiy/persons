"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createFiles = createFiles;
const devkit_1 = require("@nx/devkit");
const js_1 = require("@nx/js");
const semver_1 = require("semver");
const test_runners_1 = require("../../../utils/test-runners");
const selector_1 = require("../../utils/selector");
const update_project_root_tsconfig_1 = require("../../utils/update-project-root-tsconfig");
const version_utils_1 = require("../../utils/version-utils");
const onboarding_1 = require("nx/src/nx-cloud/utilities/onboarding");
async function createFiles(tree, options, rootOffset) {
    const { major: angularMajorVersion, version: angularVersion } = (0, version_utils_1.getInstalledAngularVersionInfo)(tree);
    const isUsingApplicationBuilder = angularMajorVersion >= 17 && options.bundler === 'esbuild';
    const disableModernClassFieldsBehavior = (0, semver_1.lt)(angularVersion, '18.1.0-rc.0');
    const rootSelector = `${options.prefix}-root`;
    (0, selector_1.validateHtmlSelector)(rootSelector);
    const nxWelcomeSelector = `${options.prefix}-nx-welcome`;
    (0, selector_1.validateHtmlSelector)(nxWelcomeSelector);
    const onBoardingStatus = await (0, onboarding_1.createNxCloudOnboardingURLForWelcomeApp)(tree, options.nxCloudToken);
    const connectCloudUrl = onBoardingStatus === 'unclaimed' &&
        (await (0, onboarding_1.getNxCloudAppOnBoardingUrl)(options.nxCloudToken));
    const substitutions = {
        rootSelector,
        appName: options.name,
        inlineStyle: options.inlineStyle,
        inlineTemplate: options.inlineTemplate,
        style: options.style,
        viewEncapsulation: options.viewEncapsulation,
        unitTesting: options.unitTestRunner !== test_runners_1.UnitTestRunner.None,
        routing: options.routing,
        minimal: options.minimal,
        nxWelcomeSelector,
        rootTsConfig: (0, devkit_1.joinPathFragments)(rootOffset, (0, js_1.getRootTsConfigFileName)(tree)),
        angularMajorVersion,
        rootOffset,
        isUsingApplicationBuilder,
        disableModernClassFieldsBehavior,
        useEventCoalescing: angularMajorVersion >= 18,
        useRouterTestingModule: angularMajorVersion < 18,
        connectCloudUrl,
        tutorialUrl: options.standalone
            ? 'https://nx.dev/getting-started/tutorials/angular-standalone-tutorial?utm_source=nx-project'
            : 'https://nx.dev/getting-started/tutorials/angular-monorepo-tutorial?utm_source=nx-project',
        tpl: '',
    };
    const angularAppType = options.standalone ? 'standalone' : 'ng-module';
    (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(__dirname, '../files/base'), options.appProjectRoot, substitutions);
    if (angularMajorVersion >= 18) {
        (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(__dirname, '../files/base-18+'), options.appProjectRoot, substitutions);
    }
    else {
        (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(__dirname, '../files/base-pre18'), options.appProjectRoot, substitutions);
    }
    if (options.standalone) {
        (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(__dirname, '../files/standalone-components'), options.appProjectRoot, substitutions);
    }
    else {
        (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(__dirname, '../files/ng-module'), options.appProjectRoot, substitutions);
    }
    (0, devkit_1.generateFiles)(tree, (0, devkit_1.joinPathFragments)(__dirname, '../files/nx-welcome', onBoardingStatus, angularAppType), options.appProjectRoot, substitutions);
    (0, update_project_root_tsconfig_1.updateProjectRootTsConfig)(tree, options.appProjectRoot, (0, js_1.getRelativePathToRootTsConfig)(tree, options.appProjectRoot), options.rootProject);
    if (!options.routing) {
        tree.delete((0, devkit_1.joinPathFragments)(options.appProjectRoot, '/src/app/app.routes.ts'));
    }
    if (options.skipTests || options.unitTestRunner === test_runners_1.UnitTestRunner.None) {
        tree.delete((0, devkit_1.joinPathFragments)(options.appProjectRoot, '/src/app/app.component.spec.ts'));
    }
    if (options.inlineTemplate) {
        tree.delete((0, devkit_1.joinPathFragments)(options.appProjectRoot, '/src/app/app.component.html'));
    }
    if (options.inlineStyle) {
        tree.delete((0, devkit_1.joinPathFragments)(options.appProjectRoot, `/src/app/app.component.${options.style}`));
    }
    if (options.minimal) {
        tree.delete((0, devkit_1.joinPathFragments)(options.appProjectRoot, 'src/app/nx-welcome.component.ts'));
    }
}
